{
  "swagger": "2.0",
  "info": {
    "description": "VaccinationRequest API",
    "version": "1.0.0",
    "title": "VaccinationRequest",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "VaccinationRequest"
    },
    {
      "name": "Users"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new User to the database",
        "operationId": "addUser",
         "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all Users",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Find User by ID",
        "description": "Returns a single User",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of User to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a User",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/vr": {
      "post": {
        "tags": [
          "VaccinationRequest"
        ],
        "summary": "Add a new VaccinationRequest to the database",
        "description": "",
        "operationId": "addVaccinationRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "VaccinationRequest object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "VaccinationRequest"
        ],
        "summary": "Get all VaccinationRequest",
        "operationId": "getVaccinationRequests",
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "VaccinationRequest not found"
          }
        }
      }
    },
    "/vr/{id}": {
      "get": {
        "tags": [
          "VaccinationRequest"
        ],
        "summary": "Find VaccinationRequest by ID",
        "description": "Returns a single VaccinationRequest",
        "operationId": "getVaccinationRequestById",
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of VaccinationRequest to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "VaccinationRequest not found"
          }
        }
      },
      "put": {
        "tags": [
          "VaccinationRequest"
        ],
        "summary": "Updates a VaccinationRequest in the database with form data",
        "description": "",
        "operationId": "updateVaccinationRequestWithForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
           {
            "name": "id",
            "in": "path",
            "description": "ID of VaccinationRequest to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "VaccinationRequest object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaccinationRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "VaccinationRequest"
        ],
        "summary": "Deletes a VaccinationRequest",
        "description": "",
        "operationId": "deleteVaccinationRequest",
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "VaccinationRequest id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "VaccinationRequest not found"
          }
        }
      }
    }
  },
  "definitions": {
    "VaccinationRequest": {
      "type": "object",
      "properties": {
        "patient_name": {
          "type": "string",
          "example": "Oleg"
        },
        "patient_phone": {
          "type": "string",
          "example": "0123456789"
        },
        "vaccine": {
          "type": "integer"
        },
        "date": {
          "type": "string",
          "example": "2021-11-12"
        },
        "start_time": {
          "type": "string",
          "example": "11:00"
        },
        "end_time": {
          "type": "string",
          "example": "12:00"
        }
      },
      "xml": {
        "name": "VaccinationRequest"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Oleg"
        },
        "surname": {
          "type": "string",
          "example": "Shalapsky"
        },
        "email": {
          "type": "string",
          "example": "email@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "1234"
        },
        "admin": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "VaccinationRequest"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}